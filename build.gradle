apply plugin: "java"
apply plugin: "idea"
apply plugin: "eclipse"
apply plugin: "application"

mainClassName = "de.uniba.dsg.bpmnspector.BPMNspectorMain"

task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}

repositories {
    jcenter()
}

configurations {
    internal
    external
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

dependencies {
    internal 'org.jdom:jdom2:2.0.6'
    internal 'jaxen:jaxen:1.1.+'
    internal 'ch.qos.logback:logback-core:1.1.+'
    internal 'ch.qos.logback:logback-classic:1.1.+'
    internal 'org.slf4j:slf4j-api:1.7.+'
    internal 'com.phloc:phloc-commons:4.3.+'
    internal 'commons-cli:commons-cli:1.3'
    internal 'commons-io:commons-io:2.4'
    internal 'org.apache.velocity:velocity:1.7'

    external files(fileTree(dir: "lib", includes: ['*.jar']))

    testCompile 'junit:junit:4.+'

    compile configurations.internal
    compile configurations.external
}

jar.archiveName = "BPMNspector.jar"

jar {
    from configurations.runtime.collect { it.isDirectory() ? it : zipTree(it) }
    manifest { attributes 'Main-Class': mainClassName }
}

compileJava {
    dependsOn 'zipReportResources'
}

run {
    if(project.hasProperty('args')){
        args project.args.split('\\s+')
    }
}

task zipReportResources(type: Zip) {
    archiveName = "reportingResources.zip"
    from('src/main/resources/reporting/res')
    destinationDir = file('src/main/resources')
}