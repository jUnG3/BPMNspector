buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.0.1'	
    }
}

plugins {
	id "java"
	id "idea"
	id "eclipse"
	id "application"
	id "jacoco"
	id "com.github.kt3k.coveralls" version "2.4.0"
	id "maven"
	id "maven-publish"
	id "com.jfrog.bintray" version "1.3.1"
}


publishing {
	publications {
		Bintray(MavenPublication) {
			from components.java
			groupId 'uniba-dsg'
            		artifactId 'BPMNspector'
            		version '1.0.1'
		}
	}
}

bintray {   
    user = 'bintray_user'
    key = 'bintray_api_key'
	publications = ['Bintray']
    pkg {
        repo = 'BPMNspector'
        name = 'BPMNspector'
        userOrg = 'uniba-dsg'
        licenses = ['LGPL-3.0']
        vcsUrl = 'https://github.com/uniba-dsg/BPMNspector.git'
		version {
            name = '1.0.1'
            desc = 'BPMNspector v1.0.1 - Static analysis for BPMN 2.0 process models.'
            vcsTag = 'v1.0.1'
        }
    }
}


repositories {
    jcenter()
}

dependencies {
	compile 'org.jdom:jdom2:2.0.6'
	compile 'jaxen:jaxen:1.1.+'
	compile 'ch.qos.logback:logback-core:1.1.+'
	compile 'ch.qos.logback:logback-classic:1.1.+'
	compile 'org.slf4j:slf4j-api:1.7.+'
	compile 'com.phloc:phloc-commons:4.3.+'
	compile 'commons-cli:commons-cli:1.3.+'
	compile 'org.apache.velocity:velocity:1.7'

	compile files(fileTree(dir: "lib", includes: ['*.jar']))

	testCompile 'junit:junit:4.+'
}


mainClassName = "de.uniba.dsg.bpmnspector.BPMNspectorMain"

version = "1.0.1"

run {
    if(project.hasProperty('args')){
        args project.args.split('\\s+')
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.7'
}


tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}


jar.archiveName = "BPMNspector.jar"

jar {
	manifest { attributes 'Main-Class': mainClassName }	
}

task fatJar(type: Jar) {
    manifest.from jar.manifest
    baseName = project.name + '-fat'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}


jacocoTestReport {
    reports {
        xml.enabled = true // coveralls plugin depends on xml format report
        html.enabled = true
    }
}